<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="modFolderLocator.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>